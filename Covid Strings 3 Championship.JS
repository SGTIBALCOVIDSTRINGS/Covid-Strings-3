doc. type. html
script
html
head
utf8
viewport content=width=device-width, initial-scale=one
title covidstrings 3 championship bracket 
div id bracket class bracket div
script src bracket .js
link rel= stylesheet href=css
head
body
bracket-container{}
matchup
solid zero;
padding 
text align center 
filename=covidstrings3 championship game .js
championship game=(high versus lowest remaining seed ) 
team high seed= highest remaining seed 
team low seed = lowest remaining seed
rounddiv=covid strings3  championship round
matchupclassname = matchup
matchupdiv.innerhtml =[team low seed versus team high seed]
rounddiv.appendchild(matchupdiv);
bracket.appendchild(rounddiv);
java util.scanner
java util
questions[]questions={
question28
question29
question30 
question31
question32
question33
question34 
collections.shuffle(arrays.aslist(questions)
class myclass
constructor (non-concatenated)
return category
if category==math problem:
prompt
log
else:
select from multiple choice
myclass=newmyclass(concatenated) 
return category
if category==math problem:
prompt
log
else:
select from multiple choice
import syntax 
substring(start,end)
userin.multiple choice
if selectedanswer==correct answer:
return true
else:
return false
advancingteam =slice(currentteams) 
result=declare winner(team1score,team2score)
if team high seed score>=sixty:
console.log(team high seed wins covid strings3)
else:
console.log(team low seed wins covid strings3)
return filename
